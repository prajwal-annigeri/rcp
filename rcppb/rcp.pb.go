// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: rcppb/rcp.proto

package rcppb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEntry struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LogType           string                 `protobuf:"bytes,1,opt,name=logType,proto3" json:"logType,omitempty"`
	NodeId            string                 `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Key               string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value             string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Term              int64                  `protobuf:"varint,7,opt,name=term,proto3" json:"term,omitempty"`
	CallbackChannelId string                 `protobuf:"bytes,8,opt,name=callbackChannelId,proto3" json:"callbackChannelId,omitempty"`
	Bucket            string                 `protobuf:"bytes,9,opt,name=bucket,proto3" json:"bucket,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_rcppb_rcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *LogEntry) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LogEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LogEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LogEntry) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCallbackChannelId() string {
	if x != nil {
		return x.CallbackChannelId
	}
	return ""
}

func (x *LogEntry) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type AppendEntriesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries       []*LogEntry            `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	Delay         int64                  `protobuf:"varint,7,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesReq) Reset() {
	*x = AppendEntriesReq{}
	mi := &file_rcppb_rcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesReq) ProtoMessage() {}

func (x *AppendEntriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesReq.ProtoReflect.Descriptor instead.
func (*AppendEntriesReq) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{1}
}

func (x *AppendEntriesReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesReq) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendEntriesReq) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesReq) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesReq) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesReq) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

func (x *AppendEntriesReq) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type AppendEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesResponse) Reset() {
	*x = AppendEntriesResponse{}
	mi := &file_rcppb_rcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesResponse) ProtoMessage() {}

func (x *AppendEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesResponse.ProtoReflect.Descriptor instead.
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{2}
}

func (x *AppendEntriesResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RequestVoteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   string                 `protobuf:"bytes,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	Delay         int64                  `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteReq) Reset() {
	*x = RequestVoteReq{}
	mi := &file_rcppb_rcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteReq) ProtoMessage() {}

func (x *RequestVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteReq.ProtoReflect.Descriptor instead.
func (*RequestVoteReq) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{3}
}

func (x *RequestVoteReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteReq) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *RequestVoteReq) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteReq) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

func (x *RequestVoteReq) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type RequestVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteResponse) Reset() {
	*x = RequestVoteResponse{}
	mi := &file_rcppb_rcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteResponse) ProtoMessage() {}

func (x *RequestVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteResponse.ProtoReflect.Descriptor instead.
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{4}
}

func (x *RequestVoteResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type GetValueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetValueResponse) Reset() {
	*x = GetValueResponse{}
	mi := &file_rcppb_rcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValueResponse) ProtoMessage() {}

func (x *GetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValueResponse.ProtoReflect.Descriptor instead.
func (*GetValueResponse) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{5}
}

func (x *GetValueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetValueResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PartitionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReachableNodes []string               `protobuf:"bytes,1,rep,name=reachableNodes,proto3" json:"reachableNodes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PartitionReq) Reset() {
	*x = PartitionReq{}
	mi := &file_rcppb_rcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionReq) ProtoMessage() {}

func (x *PartitionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionReq.ProtoReflect.Descriptor instead.
func (*PartitionReq) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{6}
}

func (x *PartitionReq) GetReachableNodes() []string {
	if x != nil {
		return x.ReachableNodes
	}
	return nil
}

type DelayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Delay         int64                  `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelayRequest) Reset() {
	*x = DelayRequest{}
	mi := &file_rcppb_rcp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayRequest) ProtoMessage() {}

func (x *DelayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayRequest.ProtoReflect.Descriptor instead.
func (*DelayRequest) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{7}
}

func (x *DelayRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DelayRequest) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type HealthzRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	mi := &file_rcppb_rcp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{8}
}

type CauseFailureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CauseFailureRequest) Reset() {
	*x = CauseFailureRequest{}
	mi := &file_rcppb_rcp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CauseFailureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CauseFailureRequest) ProtoMessage() {}

func (x *CauseFailureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rcppb_rcp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CauseFailureRequest.ProtoReflect.Descriptor instead.
func (*CauseFailureRequest) Descriptor() ([]byte, []int) {
	return file_rcppb_rcp_proto_rawDescGZIP(), []int{9}
}

func (x *CauseFailureRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_rcppb_rcp_proto protoreflect.FileDescriptor

const file_rcppb_rcp_proto_rawDesc = "" +
	"\n" +
	"\x0frcppb/rcp.proto\x12\x05rcppb\x1a\x1egoogle/protobuf/wrappers.proto\"\xbe\x01\n" +
	"\bLogEntry\x12\x18\n" +
	"\alogType\x18\x01 \x01(\tR\alogType\x12\x16\n" +
	"\x06nodeId\x18\x02 \x01(\tR\x06nodeId\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x12\n" +
	"\x04term\x18\a \x01(\x03R\x04term\x12,\n" +
	"\x11callbackChannelId\x18\b \x01(\tR\x11callbackChannelId\x12\x16\n" +
	"\x06bucket\x18\t \x01(\tR\x06bucket\"\xed\x01\n" +
	"\x10AppendEntriesReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1a\n" +
	"\bleaderId\x18\x02 \x01(\tR\bleaderId\x12\"\n" +
	"\fprevLogIndex\x18\x03 \x01(\x03R\fprevLogIndex\x12 \n" +
	"\vprevLogTerm\x18\x04 \x01(\x03R\vprevLogTerm\x12)\n" +
	"\aentries\x18\x05 \x03(\v2\x0f.rcppb.LogEntryR\aentries\x12\"\n" +
	"\fleaderCommit\x18\x06 \x01(\x03R\fleaderCommit\x12\x14\n" +
	"\x05delay\x18\a \x01(\x03R\x05delay\"E\n" +
	"\x15AppendEntriesResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\xa2\x01\n" +
	"\x0eRequestVoteReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12 \n" +
	"\vcandidateId\x18\x02 \x01(\tR\vcandidateId\x12\"\n" +
	"\flastLogIndex\x18\x03 \x01(\x03R\flastLogIndex\x12 \n" +
	"\vlastLogTerm\x18\x04 \x01(\x03R\vlastLogTerm\x12\x14\n" +
	"\x05delay\x18\x05 \x01(\x03R\x05delay\"K\n" +
	"\x13RequestVoteResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12 \n" +
	"\vvoteGranted\x18\x02 \x01(\bR\vvoteGranted\"B\n" +
	"\x10GetValueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"6\n" +
	"\fPartitionReq\x12&\n" +
	"\x0ereachableNodes\x18\x01 \x03(\tR\x0ereachableNodes\"<\n" +
	"\fDelayRequest\x12\x16\n" +
	"\x06nodeId\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05delay\x18\x02 \x01(\x03R\x05delay\"\x10\n" +
	"\x0eHealthzRequest\")\n" +
	"\x13CauseFailureRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type2\xe0\x03\n" +
	"\x03RCP\x12H\n" +
	"\rAppendEntries\x12\x17.rcppb.AppendEntriesReq\x1a\x1c.rcppb.AppendEntriesResponse\"\x00\x12B\n" +
	"\vRequestVote\x12\x15.rcppb.RequestVoteReq\x1a\x1a.rcppb.RequestVoteResponse\"\x00\x12E\n" +
	"\tSetStatus\x12\x1a.google.protobuf.BoolValue\x1a\x1a.google.protobuf.BoolValue\"\x00\x12>\n" +
	"\tPartition\x12\x13.rcppb.PartitionReq\x1a\x1a.google.protobuf.BoolValue\"\x00\x12:\n" +
	"\x05Delay\x12\x13.rcppb.DelayRequest\x1a\x1a.google.protobuf.BoolValue\"\x00\x12>\n" +
	"\aHealthz\x12\x15.rcppb.HealthzRequest\x1a\x1a.google.protobuf.BoolValue\"\x00\x12H\n" +
	"\fCauseFailure\x12\x1a.rcppb.CauseFailureRequest\x1a\x1a.google.protobuf.BoolValue\"\x00B\bZ\x06/rcppbb\x06proto3"

var (
	file_rcppb_rcp_proto_rawDescOnce sync.Once
	file_rcppb_rcp_proto_rawDescData []byte
)

func file_rcppb_rcp_proto_rawDescGZIP() []byte {
	file_rcppb_rcp_proto_rawDescOnce.Do(func() {
		file_rcppb_rcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rcppb_rcp_proto_rawDesc), len(file_rcppb_rcp_proto_rawDesc)))
	})
	return file_rcppb_rcp_proto_rawDescData
}

var file_rcppb_rcp_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rcppb_rcp_proto_goTypes = []any{
	(*LogEntry)(nil),              // 0: rcppb.LogEntry
	(*AppendEntriesReq)(nil),      // 1: rcppb.AppendEntriesReq
	(*AppendEntriesResponse)(nil), // 2: rcppb.AppendEntriesResponse
	(*RequestVoteReq)(nil),        // 3: rcppb.RequestVoteReq
	(*RequestVoteResponse)(nil),   // 4: rcppb.RequestVoteResponse
	(*GetValueResponse)(nil),      // 5: rcppb.GetValueResponse
	(*PartitionReq)(nil),          // 6: rcppb.PartitionReq
	(*DelayRequest)(nil),          // 7: rcppb.DelayRequest
	(*HealthzRequest)(nil),        // 8: rcppb.HealthzRequest
	(*CauseFailureRequest)(nil),   // 9: rcppb.CauseFailureRequest
	(*wrapperspb.BoolValue)(nil),  // 10: google.protobuf.BoolValue
}
var file_rcppb_rcp_proto_depIdxs = []int32{
	0,  // 0: rcppb.AppendEntriesReq.entries:type_name -> rcppb.LogEntry
	1,  // 1: rcppb.RCP.AppendEntries:input_type -> rcppb.AppendEntriesReq
	3,  // 2: rcppb.RCP.RequestVote:input_type -> rcppb.RequestVoteReq
	10, // 3: rcppb.RCP.SetStatus:input_type -> google.protobuf.BoolValue
	6,  // 4: rcppb.RCP.Partition:input_type -> rcppb.PartitionReq
	7,  // 5: rcppb.RCP.Delay:input_type -> rcppb.DelayRequest
	8,  // 6: rcppb.RCP.Healthz:input_type -> rcppb.HealthzRequest
	9,  // 7: rcppb.RCP.CauseFailure:input_type -> rcppb.CauseFailureRequest
	2,  // 8: rcppb.RCP.AppendEntries:output_type -> rcppb.AppendEntriesResponse
	4,  // 9: rcppb.RCP.RequestVote:output_type -> rcppb.RequestVoteResponse
	10, // 10: rcppb.RCP.SetStatus:output_type -> google.protobuf.BoolValue
	10, // 11: rcppb.RCP.Partition:output_type -> google.protobuf.BoolValue
	10, // 12: rcppb.RCP.Delay:output_type -> google.protobuf.BoolValue
	10, // 13: rcppb.RCP.Healthz:output_type -> google.protobuf.BoolValue
	10, // 14: rcppb.RCP.CauseFailure:output_type -> google.protobuf.BoolValue
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rcppb_rcp_proto_init() }
func file_rcppb_rcp_proto_init() {
	if File_rcppb_rcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rcppb_rcp_proto_rawDesc), len(file_rcppb_rcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rcppb_rcp_proto_goTypes,
		DependencyIndexes: file_rcppb_rcp_proto_depIdxs,
		MessageInfos:      file_rcppb_rcp_proto_msgTypes,
	}.Build()
	File_rcppb_rcp_proto = out.File
	file_rcppb_rcp_proto_goTypes = nil
	file_rcppb_rcp_proto_depIdxs = nil
}
